# Generated by Django 3.2 on 2022-10-10 13:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import flowspec.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('peers', '0002_auto_20210603_1642'),
    ]

    operations = [
        migrations.CreateModel(
            name='FragmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fragmenttype', models.CharField(choices=[('dont-fragment', "Don't fragment"), ('first-fragment', 'First fragment'), ('is-fragment', 'Is fragment'), ('last-fragment', 'Last fragment'), ('not-a-fragment', 'Not a fragment')], max_length=20, verbose_name='Fragment Type')),
            ],
        ),
        migrations.CreateModel(
            name='MatchDscp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dscp', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'match_dscp',
            },
        ),
        migrations.CreateModel(
            name='MatchPort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port', models.CharField(blank=True, max_length=24, null=True, unique=True)),
            ],
            options={
                'db_table': 'match_port',
            },
        ),
        migrations.CreateModel(
            name='MatchProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.CharField(max_length=24, unique=True)),
            ],
            options={
                'db_table': 'match_protocol',
            },
        ),
        migrations.CreateModel(
            name='Validation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=10)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThenAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('accept', 'Accept'), ('discard', 'Discard'), ('community', 'Community'), ('next-term', 'Next term'), ('routing-instance', 'Routing Instance'), ('rate-limit', 'Rate limit'), ('sample', 'Sample')], max_length=60, verbose_name='Action')),
                ('action_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Action Value')),
            ],
            options={
                'db_table': 'then_action',
                'ordering': ['action', 'action_value'],
                'unique_together': {('action', 'action_value')},
            },
        ),
        migrations.CreateModel(
            name='Route_URJC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule URJC',
                'verbose_name_plural': 'Rules URJC',
                'db_table': 'route_urjc',
            },
        ),
        migrations.CreateModel(
            name='Route_UPM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule UPM',
                'verbose_name_plural': 'Rules UPM',
                'db_table': 'route_upm',
            },
        ),
        migrations.CreateModel(
            name='Route_UNED',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule UNED',
                'verbose_name_plural': 'Rules UNED',
                'db_table': 'route_uned',
            },
        ),
        migrations.CreateModel(
            name='Route_UEM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule UEM',
                'verbose_name_plural': 'Rules UEM',
                'db_table': 'route_uem',
            },
        ),
        migrations.CreateModel(
            name='Route_UCM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule UCM',
                'verbose_name_plural': 'Rules UCM',
                'db_table': 'route_ucm',
            },
        ),
        migrations.CreateModel(
            name='Route_UC3M',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule UC3M',
                'verbose_name_plural': 'Rules UC3M',
                'db_table': 'route_uc3m',
            },
        ),
        migrations.CreateModel(
            name='Route_UAM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule UAM',
                'verbose_name_plural': 'Rules UAM',
                'db_table': 'route_uam',
            },
        ),
        migrations.CreateModel(
            name='Route_UAH',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule UAH',
                'verbose_name_plural': 'Rules UAH',
                'db_table': 'route_uah',
            },
        ),
        migrations.CreateModel(
            name='Route_REM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule REM',
                'verbose_name_plural': 'Rules REM',
                'db_table': 'route_rem',
            },
        ),
        migrations.CreateModel(
            name='Route_IMDEANET',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule IMDEANET',
                'verbose_name_plural': 'Rules IMDEANET',
                'db_table': 'route_imdeanet',
            },
        ),
        migrations.CreateModel(
            name='Route_IMDEA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule IMDEA',
                'verbose_name_plural': 'Rules IMDEA',
                'db_table': 'route_imdea',
            },
        ),
        migrations.CreateModel(
            name='Route_CV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule CV',
                'verbose_name_plural': 'Rules CV',
                'db_table': 'route_cv',
            },
        ),
        migrations.CreateModel(
            name='Route_CUNEF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule CUNEF',
                'verbose_name_plural': 'Rules CUNEF',
                'db_table': 'route_cunef',
            },
        ),
        migrations.CreateModel(
            name='Route_CSIC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule CSIC',
                'verbose_name_plural': 'Rules CSIC',
                'db_table': 'route_csic',
            },
        ),
        migrations.CreateModel(
            name='Route_CIB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule CIB',
                'verbose_name_plural': 'Rules CIB',
                'db_table': 'route_cib',
            },
        ),
        migrations.CreateModel(
            name='Route_CEU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=128, unique=True, verbose_name='Name')),
                ('source', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Source Address')),
                ('sourceport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Source Port')),
                ('destination', models.CharField(blank=True, help_text='Usar la notaci贸n CIDR', max_length=32, null=True, verbose_name='Destination Address')),
                ('destinationport', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Destination Port')),
                ('port', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Port')),
                ('icmpcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Code')),
                ('icmptype', models.CharField(blank=True, max_length=32, null=True, verbose_name='ICMP-Type')),
                ('packetlength', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Packet Length')),
                ('tcpflag', models.CharField(blank=True, choices=[('ack', 'ACK'), ('rst', 'RST'), ('fin', 'FIN'), ('push', 'PUSH'), ('urgent', 'URGENT'), ('syn', 'SYN')], max_length=50, null=True, verbose_name='TCP flag')),
                ('filed', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expires', models.DateField(blank=True, default=flowspec.models.days_offset, null=True, verbose_name='Expires')),
                ('response', models.CharField(blank=True, max_length=512, null=True, verbose_name='Response')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('requesters_address', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('ERROR', 'ERROR'), ('EXPIRED', 'EXPIRED'), ('PENDING', 'PENDING'), ('OUTOFSYNC', 'OUTOFSYNC'), ('INACTIVE', 'INACTIVE'), ('ADMININACTIVE', 'ADMININACTIVE'), ('PROPOSED', 'PROPOSED')], default='PENDING', max_length=20, null=True, verbose_name='Status')),
                ('is_proposed', models.BooleanField(default=False)),
                ('applier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dscp', models.ManyToManyField(blank=True, to='flowspec.MatchDscp', verbose_name='DSCP')),
                ('peer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='peers.peer')),
                ('protocol', models.ManyToManyField(blank=True, to='flowspec.MatchProtocol', verbose_name='Protocol')),
                ('then', models.ManyToManyField(to='flowspec.ThenAction', verbose_name='Then')),
            ],
            options={
                'verbose_name': 'Rule CEU',
                'verbose_name_plural': 'Rules CEU',
                'db_table': 'route_ceu',
            },
        ),
    ]
